<%# 月間サマリーグラフ %>
<div id="bymonth">

  <div class="row">
    <% for m in [4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3] do %>
    <div class="col-xs-1 nopadding">
      <div class="outer">
        <div class="vertical_bottom">
          <span class="hour"><%= sprintf("%g", @vacationHourOfMonth[m]) if @vacationHourOfMonth[m] > 0 %></span>
          <p class="inner" style="background: linear-gradient(#77f, #88f); margin: 0 auto 0 auto; width: 80%;" data-hour="<%= @vacationHourOfMonth[m] %>"></p>
        </div>
      </div>
    </div>
    <% end %>
  </div>

  <div class="row">
    <% for m in [4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3] do %>
    <% targetmonth = Date::new(@paid_vacation.year + (4 <= m ? 0 : 1), m , 1) %>
    <% thismonth = Date::new(Date.today.year, Date.today.month, 1) %>
    <div class="col-xs-1 nopadding <%= "past" if targetmonth < thismonth %>"><%= m %></div>
    <% end %>
  </div>

</div>
<script type="text/javascript">
  $(document).ready(function(){

    // グラフを4月から順にアニメーション表示する
    var monthAnimate = function() {
      var hourMax = <%= @vacationHourOfMonth.max %>;
      var m = -1;
      $('#bymonth .inner').each(function(i) {
        var hour = $(this).data('hour');
        if (hour > 0) {
          m++;
          $(this).delay(120 * m).animate ({
            height: (((hour / hourMax) * 40)) + "px"
          }, 1000, "easeInOutBack");
          // 数値はグラフよりも少し遅れて表示させる
          $(this).prev('.hour').delay((120 * m) + 700).fadeIn(300);
        }
      });
    };

    // クリックしたらグラフ表示を実行する
    $('#bymonth').click(function() {
      // アニメーション中は無視する
      if ($('#bymonth .inner').is(':animated')) { return }

      // 表示されているグラフを隠す
      $('.vertical_bottom span').fadeOut(300);
      $('#bymonth .inner').each(function(i) {
        $(this).animate ({
          height: "0px"
        }, "normal", "easeInOutBack");
      });

      // グラフ表示を実行する
      monthAnimate();
    });

    // ロード時にグラフ表示を実行する
    monthAnimate();
  });
</script>
